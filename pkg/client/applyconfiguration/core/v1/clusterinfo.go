/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ClusterInfoApplyConfiguration represents an declarative configuration of the ClusterInfo type for use
// with apply.
type ClusterInfoApplyConfiguration struct {
	Major        *string `json:"major,omitempty"`
	Minor        *string `json:"minor,omitempty"`
	GitVersion   *string `json:"gitVersion,omitempty"`
	GitCommit    *string `json:"gitCommit,omitempty"`
	GitTreeState *string `json:"gitTreeState,omitempty"`
	BuildDate    *string `json:"buildDate,omitempty"`
	GoVersion    *string `json:"goVersion,omitempty"`
	Compiler     *string `json:"compiler,omitempty"`
	Platform     *string `json:"platform,omitempty"`
}

// ClusterInfoApplyConfiguration constructs an declarative configuration of the ClusterInfo type for use with
// apply.
func ClusterInfo() *ClusterInfoApplyConfiguration {
	return &ClusterInfoApplyConfiguration{}
}

// WithMajor sets the Major field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Major field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithMajor(value string) *ClusterInfoApplyConfiguration {
	b.Major = &value
	return b
}

// WithMinor sets the Minor field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Minor field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithMinor(value string) *ClusterInfoApplyConfiguration {
	b.Minor = &value
	return b
}

// WithGitVersion sets the GitVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitVersion field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithGitVersion(value string) *ClusterInfoApplyConfiguration {
	b.GitVersion = &value
	return b
}

// WithGitCommit sets the GitCommit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitCommit field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithGitCommit(value string) *ClusterInfoApplyConfiguration {
	b.GitCommit = &value
	return b
}

// WithGitTreeState sets the GitTreeState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitTreeState field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithGitTreeState(value string) *ClusterInfoApplyConfiguration {
	b.GitTreeState = &value
	return b
}

// WithBuildDate sets the BuildDate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildDate field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithBuildDate(value string) *ClusterInfoApplyConfiguration {
	b.BuildDate = &value
	return b
}

// WithGoVersion sets the GoVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GoVersion field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithGoVersion(value string) *ClusterInfoApplyConfiguration {
	b.GoVersion = &value
	return b
}

// WithCompiler sets the Compiler field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Compiler field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithCompiler(value string) *ClusterInfoApplyConfiguration {
	b.Compiler = &value
	return b
}

// WithPlatform sets the Platform field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Platform field is set to the value of the last call.
func (b *ClusterInfoApplyConfiguration) WithPlatform(value string) *ClusterInfoApplyConfiguration {
	b.Platform = &value
	return b
}
